buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 10
targetCompatibility = 10
version = '0.0.1'

repositories {
    mavenCentral()
}

defaultTasks 'clean', 'test', 'jars'

jar {
    version             = project.version
    manifest {
        attributes(
            "Implementation-Title"      : project.name,
            "Implementation-Version"    : project.version,
            "Gradle-Version"            : project.gradle.gradleVersion,
            "Created-By"                : 'Kenji Saito'
        )
    }
}

test {
  // enable TestNG support (default is JUnit)
  useTestNG()

  // listen to events in the test execution lifecycle
  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}

// Source Jar
task sourceJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource

    version             = project.version
    manifest {
        attributes(
            "Implementation-Title"      : project.name,
            "Implementation-Version"    : project.version,
            "Gradle-Version"            : project.gradle.gradleVersion,
            "Created-By"                : 'Kenji Saito'
        )
    }
}

// JavaDoc Jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir

    version             = project.version
    manifest {
        attributes(
            "Implementation-Title"      : project.name,
            "Implementation-Version"    : project.version,
            "Gradle-Version"            : project.gradle.gradleVersion,
            "Created-By"                : 'Kenji Saito'
        )
    }
}

tasks.withType(JavaCompile) {
    doFirst {
        sourceCompatibility = 10
        targetCompatibility = 10
        options.compilerArgs = [
                '--add-modules', 'java.se.ee',
                '--add-exports', 'java.xml.bind/com.sun.istack.internal=ALL-UNNAMED'
        ]
    }
}

tasks.withType(Test) {
    doFirst {
        jvmArgs = [
                '--add-modules', 'java.se.ee',
                '-Djava.locale.providers=COMPAT,SPI',
        ]
    }
}

// Make all Jars
task jars {
    dependsOn jar, sourceJar, javadocJar
}

junitPlatform {
    // platformVersion '1.0.0'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:' + dropwizardVersion
    compile 'io.dropwizard:dropwizard-testing:' + dropwizardVersion
    compile 'io.dropwizard:dropwizard-client:' + dropwizardVersion

    compile 'org.slf4j:jcl-over-slf4j:' + slf4jVersion
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
