plugins {
  id 'org.springframework.boot' version '3.4.2'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'java'
}

group = 'com.github.poad.example.springboot'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'com.zaxxer', module: 'HikariCP'
	}
	// https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
	implementation 'org.apache.tomcat:tomcat-jdbc:11.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.validation:jakarta.validation-api'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'io.micrometer:micrometer-registry-jmx'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'gcr.io/paketo-buildpacks/builder:base-platform-api-latest'
	imageName = "poad/spring-data-jpa-async:${version}"
}
