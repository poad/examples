plugins {
  id 'org.springframework.boot' version '2.7.2'
  id 'io.spring.dependency-management' version '1.0.12.RELEASE'
  id 'java'
}

group = 'com.github.poad'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'com.zaxxer', module: 'HikariCP'
	}
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

	// https://mvnrepository.com/artifact/ma.glasnost.orika/orika-core
	implementation 'ma.glasnost.orika:orika-core:1.5.4'

	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation 'com.google.guava:guava:31.1-jre'

	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	runtimeOnly 'mysql:mysql-connector-java:8.0.30'

	// https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jdbc
	runtimeOnly 'org.apache.tomcat:tomcat-jdbc:10.0.23'

	// compileOnly 'org.projectlombok:lombok:1.18.20'
	// annotationProcessor 'org.projectlombok:lombok:1.18.20'

	// https://mvnrepository.com/artifact/com.amazonaws/aws-xray-recorder-sdk-bom
	implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.11.2')
    runtimeOnly 'com.amazonaws:aws-xray-recorder-sdk-core'
    runtimeOnly 'com.amazonaws:aws-xray-recorder-sdk-sql-mysql'
    runtimeOnly 'com.amazonaws:aws-xray-recorder-sdk-spring'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.3'
    runtimeOnly 'io.micrometer:micrometer-registry-jmx:1.9.3'
    runtimeOnly 'io.micrometer:micrometer-registry-cloudwatch:1.9.2'

	implementation 'jakarta.validation:jakarta.validation-api'
	implementation 'javax.validation:validation-api'
	implementation 'org.hibernate.validator:hibernate-validator'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

bootBuildImage {
	builder = 'gcr.io/paketo-buildpacks/builder:base-platform-api-latest'
	imageName = "spring-boot-data-jpa-example:latest"
}
