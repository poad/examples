buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    ext {
        log4j2Version = '2.20.0'
    }
}

plugins {
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
  id 'application'
}

group = 'com.github.poad.examples'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17 

mainClassName = 'com.github.poad.examples.kuromori.KuromoriApplication'

repositories {
    mavenCentral()
}

def defaultEncoding = 'UTF-8'
compileJava {
    options.encoding = defaultEncoding
}
compileTestJava {
    options.encoding = defaultEncoding
}

ext {
    kuromojiVersion = "0.9.0"
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation "org.apache.logging.log4j:log4j-to-slf4j:${log4j2Version}"
    implementation "com.atilika.kuromoji:kuromoji-ipadic:${kuromojiVersion}"
    implementation "com.atilika.kuromoji:kuromoji-jumandic:${kuromojiVersion}"
    implementation "com.atilika.kuromoji:kuromoji-naist-jdic:${kuromojiVersion}"
    implementation "com.atilika.kuromoji:kuromoji-unidic:${kuromojiVersion}"
    implementation "com.atilika.kuromoji:kuromoji-unidic-kanaaccent:${kuromojiVersion}"

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-registry-jmx'
    implementation 'io.micrometer:micrometer-registry-cloudwatch'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

bootBuildImage {
    imageName = "kuromoji-api-server:latest"
    builder = 'gcr.io/paketo-buildpacks/builder:base-platform-api-latest'
}
