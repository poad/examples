/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ken-yo' at '15/12/23 22:33' with Gradle 2.9
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'mysql:mysql-connector-java:' + mysqlConnectorVersion
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:" + flywayPluginVersion
    }
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'mysql:mysql-connector-java:' + mysqlConnectorVersion
        classpath "gradle.plugin.com.boxfuse.client:flyway-release:" + flywayPluginVersion
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
}



flyway {
    user = 'root'
    url = 'jdbc:mysql://127.0.0.1:3306/test'
}
