name: Auto update

on:
  push:
    branches:
      - main

  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write
  checks: write

jobs:
  list-head-refs:
    runs-on: ubuntu-latest

    outputs:
      head-refs: ${{ steps.list-head-refs.outputs.result }}
    steps:
      - name: List head refs
        uses: actions/github-script@v8
        id: list-head-refs
        with:
          script: |
            const query = `
              query($owner:String!, $name:String!, $baseRef:String!) {
                repository(owner:$owner, name:$name) {
                  pullRequests(first: 100, states: [OPEN], baseRefName: $baseRef) {
                    nodes {
                      headRefName
                    }
                  }
                }
              }
            `;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              baseRef: 'main'
            };
            const result = await github.graphql(query, variables);

            console.log({query, variables});

            console.log(result.repository.pullRequests.nodes);

            return result.repository.pullRequests.nodes
                .map((pullRequest) => pullRequest.headRefName);

  auto-update:
    needs: [list-head-refs]
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.list-head-refs.outputs.head-refs).length > 0 }}
    strategy:
      matrix:
        head-ref: ${{ fromJSON(needs.list-head-refs.outputs.head-refs) }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Git config
        run: |
          git config --local user.email "ken-yo@mbr.nifty.com"
          git config --local user.name "Kenji Saito"

      - name: rebase
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          git switch ${{ matrix.head-ref }}
          if ! git rebase main; then
            exit 1;
          fi
          if [ $(git status | grep 'nothing to commit, working tree clean' | wc -l) -eq 0 ]; then
            git push --force-with-lease
          fi

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
