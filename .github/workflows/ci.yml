name: Integration
 
on:
  push:
     branches:    
     - main 
  pull_request_target:
    branches:
      - main
  
  workflow_dispatch:

permissions: write-all

jobs:

  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
    - name: Pull request auto merge enabler
      if: github.event_name == 'pull_request'
      continue-on-error: true
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.2
      with:
        pull_request_id: ${{ github.event.pull_request.node_id }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH

  android:
    strategy:
      matrix:
        java_versions:
          - 11
          - 17

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK ${{ matrix.java_versions }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java_versions }}
        distribution: liberica

    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (android/HelloAndroid)
      run: |
        cd android/HelloAndroid
        chmod +x gradlew
        ./gradlew build -x test

    - name: Build with Gradle (android/MyApplication)
      run: |
        cd android/MyApplication
        chmod +x gradlew
        ./gradlew build

  java-example:
    timeout-minutes: 120
    strategy:
      matrix:
        targets:
          - path: java-example
          - path: java-example/spring-boot/morphological-analyis/kuromoji
          - path: java-example/spring-boot/spring-boot-cassandra
          - path: java-example/spring-boot/spring-boot-data-dynamodb
          - path: java-example/spring-boot/spring-boot-data-jpa-example
          - path: java-example/spring-boot/spring-boot-data-jpa-query-example
          - path: java-example/spring-boot/spring-data-jpa-async/spring-data-jpa-async
          - path: java-example/spring-boot/spring-boot-jdbc-example
          - path: java-example/spring-boot/spring-boot-jdbi-example
          - path: java-example/spring-boot/spring-boot-jpa-example
          - path: java-example/spring-boot/spring-boot-metrics
          - path: java-example/spring-boot/spring-boot-micrometer
          - path: java-example/spring-boot/spring-boot-web-example
          - path: java-example/spring-boot/spring-boot-web-thymeleaf-example
          - path: java-example/spring-boot/webauthn/server
        java_versions:
          - 11
          - 17

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: liberica

    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (${{ matrix.targets.path }})
      run: |
        cd ${{ matrix.targets.path }}
        chmod +x gradlew
        ./gradlew build -x test

  quarkus-example:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java_versions:
          - 11
          - 17
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK ${{ matrix.java_versions }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java_versions }}
        distribution: liberica
    
    - uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Maven (quarkus-example/getting-started)
      run: |
        cd quarkus-example/getting-started
        ./mvnw install

    - name: Build with Gradle (quarkus-example/quarkus-mp-example)
      run: |
        cd quarkus-example/quarkus-mp-example
        chmod +x gradlew
        ./gradlew build

  # scala-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: 1.8
  #      distribution: liberica
    
  #   - name: Build and test with sbt (scala-example)
  #     run: |
  #       cd scala-example
  #       sbt test

  #   - name: Build and test with sbt (scala-example/spark)
  #     run: |
  #       cd scala-example/spark
  #       sbt test
