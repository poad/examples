name: Integration
 
on:
  pull_request:
    branches:
      - main
  
jobs:
  android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (android/HelloAndroid)
      run: |
        cd android/HelloAndroid
        chmod +x gradlew
        ./gradlew build -x test

    - name: Build with Gradle (android/MyApplication)
      run: |
        cd android/MyApplication
        chmod +x gradlew
        ./gradlew build

  java-example:
    strategy:
      matrix:
        targets:
          - path: java-example
          - path: java-example/spring-boot/morphological-analyis/kuromoji
          - path: java-example/spring-boot/spring-boot-cassandra
          - path: java-example/spring-boot/spring-boot-data-dynamodb
          - path: java-example/spring-boot/spring-boot-data-jpa-example
          - path: java-example/spring-boot/spring-boot-data-jpa-query-example
          - path: java-example/spring-boot/spring-data-jpa-async/spring-data-jpa-async
          - path: java-example/spring-boot/spring-boot-jdbc-example
          - path: java-example/spring-boot/spring-boot-jdbi-example
          - path: java-example/spring-boot/spring-boot-jib-example
          - path: java-example/spring-boot/spring-boot-jpa-example
          - path: java-example/spring-boot/spring-boot-metrics
          - path: java-example/spring-boot/spring-boot-micrometer
          - path: java-example/spring-boot/spring-boot-web-example
          - path: java-example/spring-boot/spring-boot-web-thymeleaf-example
          - path: java-example/spring-boot/webauthn/server

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (${{ matrix.targets.path }})
      run: |
        cd ${{ matrix.targets.path }}
        chmod +x gradlew
        ./gradlew build -x test
        
  # java-maven-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 11
    
  #   - name: Cache local Maven repository
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/.m2/repository
  #       key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
  #       restore-keys: |
  #         ${{ runner.os }}-maven-

  #   - name: Build with Maven (java-maven-example/java-maven-example-bom)
  #     run: |
  #       cd java-maven-example/java-maven-example-bom
  #       ./mvnw install

  #   - name: Build with Maven (java-maven-example/apache-hc-digest-auth-examoles)
  #     run: |
  #       cd java-maven-example/apache-hc-digest-auth-examoles
  #       ./mvnw -B package --file pom.xml

    # - name: Build with Maven (java-maven-example/s2jdbc-doma2-spring-boot-example)
    #   run: |
    #     cd java-maven-example/s2jdbc-doma2-spring-boot-example
    #     ./mvnw -B package --file pom.xml

    # - name: Build with Maven (java-maven-example/s2jdbc-jmx-support)
    #   run: |
    #     cd java-maven-example/s2jdbc-jmx-support
    #     ./mvnw -B package --file pom.xml

    # - name: Build with Maven (java-maven-example/spring-boot-data-doma2-example)
    #   run: |
    #     cd java-maven-example/spring-boot-data-doma2-example
    #     ./mvnw -B package --file pom.xml

    # - name: Build with Maven (java-maven-example/spring-boot-data-doma2-jmx-example)
    #   run: |
    #     cd java-maven-example/spring-boot-data-doma2-jmx-example
    #     ./mvnw -B package --file pom.xml

    # - name: Build with Maven (java-maven-example/spring-boot-doma2-example)
    #   run: |
    #     cd java-maven-example/spring-boot-doma2-example
    #     ./mvnw -B package --file pom.xml
        
    # - name: Build with Maven (java-maven-example/spring-boot-uroborosql-example)
    #   run: |
    #     cd java-maven-example/spring-boot-uroborosql-example
    #     ./mvnw -B package --file pom.xml


  micronaut-examples:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (micronaut-examples/hello-graal)
      run: |
        cd micronaut-examples/hello-graal
        ./docker-build.sh
        
    - name: Build with Gradle (micronaut-examples/hello-world)
      run: |
        cd micronaut-examples/hello-world
        ./docker-build.sh
        
    - name: Build with Gradle (micronaut-examples/micronaut-crud-graal)
      run: |
        cd micronaut-examples/micronaut-crud-graal
        ./docker-build.sh
        
    - name: Build with Gradle (micronaut-examples/micronaut-native)
      run: |
        cd micronaut-examples/micronaut-native
        ./docker-build.sh
        
    - name: Build with Gradle (micronaut-examples/micronaut-native-server)
      run: |
        cd micronaut-examples/micronaut-native-server
        ./docker-build.sh


  quarkus-example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    - uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Maven (quarkus-example/getting-started)
      run: |
        cd quarkus-example/getting-started
        ./mvnw install

    - name: Build with Gradle (quarkus-example/quarkus-mp-example)
      run: |
        cd quarkus-example/quarkus-mp-example
        chmod +x gradlew
        ./gradlew build

  # scala-example:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Set up JDK 8
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 1.8
    
  #   - name: Build and test with sbt (scala-example)
  #     run: |
  #       cd scala-example
  #       sbt test

  #   - name: Build and test with sbt (scala-example/spark)
  #     run: |
  #       cd scala-example/spark
  #       sbt test
