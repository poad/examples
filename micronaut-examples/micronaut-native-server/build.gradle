plugins {
    id "com.google.cloud.tools.jib" version "1.8.0"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id "java"
}



version "0.1"
group "micronaut.server"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly

    micronautBom
    compileOnly.extendsFrom(micronautBom)
    annotationProcessor.extendsFrom(micronautBom)
    implementation.extendsFrom(micronautBom)
}

dependencies {
    micronautBom platform('io.micronaut:micronaut-bom:1.2.7')

    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-management"
    implementation "io.micronaut.configuration:micronaut-micrometer-core"
    implementation "io.micronaut.configuration:micronaut-hibernate-jpa"
    implementation "io.micronaut.configuration:micronaut-jdbc-tomcat"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.configuration:micronaut-micrometer-registry-prometheus"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    compileOnly "com.oracle.substratevm:svm"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "micronaut.server.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
jib.to.image = 'gcr.io/micronaut-server/jib-image'

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
